{"version":3,"sources":["state/gameData/slice.ts","state/store.ts","App.tsx","reportWebVitals.js","index.tsx"],"names":["gameDataSlice","createSlice","name","initialState","reducers","addData","state","action","payload","selectData","gameData","actions","Store","configureStore","reducer","gameDataReducer","App","dispatch","useDispatch","useSelector","console","log","useEffect","socket","socketIOClient","on","data","disconnect","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"gNAOaA,EAAgBC,YAAY,CACvCC,KAAM,WACNC,aAAc,GACdC,SAAU,CACRC,QAAS,SAACC,EAAOC,GAAR,OACD,eAAQA,EAAOC,aAIdC,EAAa,SAACH,GAAD,OAAyBA,EAAMI,UAC1CL,EAAYL,EAAcW,QAA1BN,QAEAL,IAAf,QChBaY,EAAQC,YAAe,CAClCC,QAAS,CACPJ,SAAUK,K,OCmBCC,MAlBf,WACE,IAAMC,EAAWC,cACXR,EAAWS,YAAYV,GAa7B,OAZAW,QAAQC,IAAIX,GAEZY,qBAAU,WACR,IAAMC,EAASC,IAAe,yBAI9B,OAHAD,EAAOE,GAAG,QAAQ,SAACC,GACjBT,EAASZ,EAAQqB,OAEZ,WACLH,EAAOI,gBAER,CAACV,IAEG,qBAAKW,UAAU,MAAf,+BCTMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAO7B,EAAjB,SACE,cAAC,EAAD,QAGJ8B,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.cb753ee4.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { GameState } from \"csgo-gsi-types\";\n\ntype gameDataType = {\n  gameData: GameState;\n};\n\nexport const gameDataSlice = createSlice({\n  name: \"gameData\",\n  initialState: {},\n  reducers: {\n    addData: (state, action: PayloadAction<GameState>) =>\n      (state = { ...action.payload }),\n  },\n});\n\nexport const selectData = (state: gameDataType) => state.gameData;\nexport const { addData } = gameDataSlice.actions;\n\nexport default gameDataSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport gameDataReducer from \"./gameData/slice\";\n\nexport const Store = configureStore({\n  reducer: {\n    gameData: gameDataReducer,\n  },\n});\n","import React, { useEffect } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addData, selectData } from \"./state\";\nimport { GameState } from \"csgo-gsi-types\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const gameData = useSelector(selectData);\n  console.log(gameData);\n\n  useEffect(() => {\n    const socket = socketIOClient(\"http://127.0.0.1:4000\");\n    socket.on(\"data\", (data: GameState) => {\n      dispatch(addData(data));\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [dispatch]);\n\n  return <div className=\"App\">CSGO Match Stats</div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { Provider } from \"react-redux\";\nimport { Store } from \"./state\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}